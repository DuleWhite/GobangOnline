1. 演示
2. 讨论Swing：Swing 是一个为Java设计的GUI工具包。Swing提供许多比AWT更好的屏幕显示元素。它们用纯Java写成，所以同Java本身一样可以跨平台运行，这一点不像AWT。它们是JFC的一部分。它们支持可更换的面板和主题（各种操作系统默认的特有主题），然而不是真的使用原生平台提供的设备，而是仅仅在表面上模仿它们。这意味着你可以在任意平台上使用JAVA支持的任意面板。轻量级组件的缺点则是执行速度较慢，优点就是可以在所有平台上采用统一的行为。
3. Swing和AWT的区别：
	AWT的图形函数与操作系统提供的图形函数有着一一对应的关系。也就是说，当我们利用 AWT构件图形用户界面的时候，实际上是在利用操作系统的图形库。因为AWT是依靠本地方法来实现功能的，所以AWT控件称为“重量级控件”
	1) AWT 是基于本地方法的C/C++程序，其运行速度比较快；Swing是基于AWT的Java程序，其运行速度比较慢。
    2) AWT的控件在不同的平台可能表现不同，而Swing在所有平台表现一致。

	而Swing ，不仅提供了AWT 的所有功能，还用纯粹的Java代码对AWT的功能进行了大幅度的扩充。  由于 Swing是用纯粹的Java代码来实现的，因此Swing控件在各平台通用。因为Swing不使用本地方法，故Swing控件称为“轻量级控件”。 
4. 设计模式
	单例模式：输入输出流（网络请求发送和接受对象），主窗口
	监听者模式、观察者模式：按钮的点击事件
	管理者模式：（管理者本身是单例）客户端：网络交互（Socket）管理，服务端：对战管理，玩家管理
5. 网络交互与线程
	服务器端：
		1. 创建ServerSocket对象，绑定监听端口
		2. 通过不断的进行Accept建立跟不同客户端的连接
		3. 通过输入流对用户接收客户端发送的请求
		4. 通过输出流对客户端发送响应信息
		5. 关闭相应的资源
	客户端：
		1. 创建Socket对象，连接到指定的服务器端口
		2. 通过输出流对服务端发送请求
		3. 通过输入流接受服务端发送的响应信息
		5. 关闭相应的资源
6.总结